基本介绍：
1）策略模式（Strategy Pattern）中，定义算法族（策略组），分别封装起来，让他们之间可以相互替换，此模式让算法的变化独立于使用算法的客户。
2）这算法体现了几个设计原则，第一、不变化的代码从不变的代码中分离出来；第二、针对接口编程而不是具体的类（定义了策略接口）；第三、多用组合\聚合，少用继承。

注意事项和细节：
1）策略模式的关键是：分析项目中变化部分和不变化部分
2）策略模式的核心思想是：多用组合/聚合，少用继承；用行为类组合，而不是行为的继承。更有弹性
3）遵守开闭原则（ocp）
4）提供了可以替换继承关系的方法：策略模式将算法封装在独立的Strategy类中使得你可以独立于其Context改变它，使它易于切换、易于理解、易于扩展
5）需要注意的是：每添加一个策略，就要添加一个类，当策略过多时会导致类数量庞大，维护起来更复杂